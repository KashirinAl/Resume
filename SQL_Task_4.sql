--Таблица dict (ниже пример заполнения)
--id_dog     dt_beg_dog     dt_end_dog     region
--11111      01.01.2022      31.12.2022       Москва
--22222      15.03.2022      30.09.2022       Москва
--33333      01.06.2022      31.05.2023       Санкт-Петербург
--44444      01.09.2022      31.03.2023       Воронеж
--55555      01.10.2022      28.02.2023       Уфа

--Таблица transact (ниже пример заполнения)
--id_dog     dt_transact     transact_sum
--11111      15.01.2022     1500
--11111      01.02.2022     2500
--22222      01.04.2022     3000
--33333      01.07.2022     2000

--Требуется реализовать sql-запрос со следующими критериями:
--Выбрать ТОП-3 транзакции по каждому из договоров, которые относятся только к Москве/Санкт-Петербургу, и дата начала действия договоров приходится на сентябрь 2022.
--Указанные договора необходимо отсортировать по сумме по убыванию.
--Итоговые вид:
--region     id_dog     dt_beg_dog     transact_sum


Требуется реализовать sql-запрос со следующими критериями:
Выбрать ТОП-3 транзакции по каждому из договоров, которые относятся только к Москве/Санкт-Петербургу, и дата начала действия договоров приходится на сентябрь 2022.
Указанные договора необходимо отсортировать по сумме по убыванию.
Итоговые вид:
region     id_dog     dt_beg_dog     transact_sum

with t as (/* 
Для читабельности - не больше 1 вложенного подзапроса или 2х маленьких. 
Остальные в CTE для линейной организации Transform-операций 
*/
	select d.region, d.id_dog, d.dt_beg_dog, a.dt_transact, a.transact_sum, 
	       /* Для каждого договора определяем топ-транзакций оконной функцией */
		   row_number() over (partition by a.id_dog order by a.transact_sum desc) as top_transact
	from transact as a
	join (select /* Все договоры, начатые с 1 сентября в Москве и Санкт-Петербурге */
	      id_dog, dt_beg_dog, region 
	      from dict 
		  where dt_beg_dog::date >= '01.09.2022'
	      and region in ('Москва','Санкт-Петербург')
	      ) as d
	on a.id_dog = d.id_dog
	)
select region, id_dog, dt_beg_dog, sum( transact_sum ) as transact_sum
from t
where top_transact <= 3 /* оставляем только 1,2,3 - которым соответствуют самые большие транзакции */
group by region, id_dog, dt_beg_dog
order by sum( transact_sum ) desc;
